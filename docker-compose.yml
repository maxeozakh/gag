services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gag_app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/__pycache__/
    command:
      [
        "uvicorn",
        "app.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8000",
        "--reload",
      ]

  db:
    image: pgvector/pgvector:pg17
    container_name: postgres_db_gag
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5442:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./00-init.sh:/docker-entrypoint-initdb.d/00-init.sh
      - ./db_dump.sqlc:/docker-entrypoint-initdb.d/02-data.sqlc
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 5
    command: postgres -c 'max_connections=100' -c 'shared_buffers=128MB'

volumes:
  db_data:
